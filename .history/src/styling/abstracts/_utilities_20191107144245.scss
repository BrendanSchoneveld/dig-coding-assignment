@import "./variables", "./functions";

.img {
  &--rounded {
    border-radius: 50%;
  }
}

.txt {
  &--l {
    text-align: left;
  }
  &--c {
    text-align: center;
  }
  &--r {
    text-align: right;
  }
}

.flex {
  display: flex;

  &--direction-col {
    flex-direction: column;
  }

  &--direction-row {
    flex-direction: row;
  }

  &--center {
    align-items: center;
    justify-content: center;
  }

  &--center-v {
    align-items: center;
  }

  &--center-h {
    justify-content: center;
  }

  &--align-t {
    align-items: flex-start;
  }

  &--align-b {
    align-items: flex-end;
  }

  &--divide-h {
    justify-content: space-between;
  }

  &--align-r {
    justify-content: flex-end;
  }

  &--align-l {
    justify-content: flex-start;
  }
}

.txt {
  &--l {
    text-align: left;
  }

  &--c {
    text-align: center;
  }

  &--r {
    text-align: right;
  }
}

.bg {
  &--no-bg {
    background: transparent !important;
  }

  &--orange {
    background: v(brand-color--orange) !important;

    * {
      color: v(brand-color--purple) !important;
    }
  }

  &--purple {
    background: v(brand-color--purple) !important;

    * {
      color: v(brand-color--orange) !important;
    }
  }
}

.img-responsive {
  width: 100%;
  height: auto;
}

.height-100 {
  height: 100%;
}

@each $colorName, $color in $colors {
  .bg-#{$colorName} {
    background-color: #{$color};
  }

  .fc-#{$colorName} {
    color: #{$color};
  }
}

.border {
  &-r- {
    @each $spaceUnit in $spacings {
      &#{$spaceUnit} {
        border-radius: #{$spaceUnit / 10}rem;
      }
    }
  }
}

.min {
  &-h- {
    @each $spaceUnit in $spacings {
      &#{$spaceUnit} {
        min-height: #{$spaceUnit / 10}rem;
      }
    }
  }
}

@each $fontSizeUnit in $fontSizes {
  .fs-#{$fontSizeUnit} {
    font-size: #{$fontSizeUnit / 10}rem;
  }
}

@each $spaceUnit in $spacings {
  @each $side in $sides {
    @if $side == "all" {
      .m-#{$spaceUnit} {
        margin: #{$spaceUnit / 10}rem;
      }
      .p-#{$spaceUnit} {
        padding: #{$spaceUnit / 10}rem;
      }
    } @else if $side == "vertical" {
      .m#{str-slice($side, 0, 1)}-#{$spaceUnit} {
        margin-top: #{$spaceUnit / 10}rem;
        margin-bottom: #{$spaceUnit / 10}rem;
      }
      .p#{str-slice($side, 0, 1)}-#{$spaceUnit} {
        padding-top: #{$spaceUnit / 10}rem;
        padding-bottom: #{$spaceUnit / 10}rem;
      }
    } @else if $side == "horizontal" {
      .m#{str-slice($side, 0, 1)}-#{$spaceUnit} {
        margin-left: #{$spaceUnit / 10}rem;
        margin-right: #{$spaceUnit / 10}rem;
      }

      .p#{str-slice($side, 0, 1)}-#{$spaceUnit} {
        padding-left: #{$spaceUnit / 10}rem;
        padding-right: #{$spaceUnit / 10}rem;
      }
    } @else {
      .m#{str-slice($side, 0, 1)}-#{$spaceUnit} {
        margin-#{$side}: #{$spaceUnit / 10}rem;
      }

      .p#{str-slice($side, 0, 1)}-#{$spaceUnit} {
        padding-#{$side}: #{$spaceUnit / 10}rem;
      }
    }

    @each $abbrev, $breakpointUnit in $breakpoints {
      @media only screen and (min-width: #{$breakpointUnit}px) {
        @if $side == "all" {
          .m-#{$spaceUnit} {
            margin: #{$spaceUnit / 10}rem;
          }
          .p-#{$spaceUnit} {
            padding: #{$spaceUnit / 10}rem;
          }
        } @else if $side == "vertical" {
          .m#{str-slice($side, 0, 1)}-#{$spaceUnit}-#{$abbrev} {
            margin-top: #{$spaceUnit / 10}rem;
            margin-bottom: #{$spaceUnit / 10}rem;
          }
          .p#{str-slice($side, 0, 1)}-#{$spaceUnit}-#{$abbrev} {
            padding-top: #{$spaceUnit / 10}rem;
            padding-bottom: #{$spaceUnit / 10}rem;
          }
        } @else if $side == "horizontal" {
          .m#{str-slice($side, 0, 1)}-#{$spaceUnit}-#{$abbrev} {
            margin-left: #{$spaceUnit / 10}rem;
            margin-right: #{$spaceUnit / 10}rem;
          }

          .p#{str-slice($side, 0, 1)}-#{$spaceUnit}-#{$abbrev} {
            padding-left: #{$spaceUnit / 10}rem;
            padding-right: #{$spaceUnit / 10}rem;
          }
        } @else {
          .m#{str-slice($side, 0, 1)}-#{$spaceUnit}-#{$abbrev} {
            margin-#{$side}: #{$spaceUnit / 10}rem;
          }

          .p#{str-slice($side, 0, 1)}-#{$spaceUnit}-#{$abbrev} {
            padding-#{$side}: #{$spaceUnit / 10}rem;
          }
        }
      }
    }
  }
}
